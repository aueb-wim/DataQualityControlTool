<?xml version="1.0" encoding="UTF-8"?>
<mappingtask>
  <config>
    <rewriteSubsumptions>true</rewriteSubsumptions>
    <rewriteCoverages>true</rewriteCoverages>
    <rewriteSelfJoins>true</rewriteSelfJoins>
    <rewriteEGDs>false</rewriteEGDs>
    <sortStrategy>-1</sortStrategy>
    <skolemTableStrategy>-1</skolemTableStrategy>
    <useLocalSkolem>false</useLocalSkolem>
  </config>
  <source>
    <type>CSV</type>
    <csv>
      <csv-db-name>mock</csv-db-name>
      <csv-tables>
        <csv-table>
          <schema>source/source_dataset.csv</schema>
          <instances>
            <instance>
              <path>source/source_dataset.csv</path>
              <column-names>true</column-names>
            </instance>
          </instances>
        </csv-table>
      </csv-tables>
    </csv>
    <inclusions />
    <exclusions />
    <duplications />
    <functionalDependencies />
    <selectionConditions />
    <joinConditions />
  </source>
  <target>
    <type>CSV</type>
    <csv>
      <csv-db-name>cde mock</csv-db-name>
      <csv-tables>
        <csv-table>
          <schema>target/target_dataset.csv</schema>
          <instances>
            <instance>
              <path>target/target_dataset.csv</path>
              <column-names>true</column-names>
            </instance>
          </instances>
        </csv-table>
      </csv-tables>
    </csv>
    <inclusions />
    <exclusions />
    <duplications />
    <functionalDependencies />
    <selectionConditions />
    <joinConditions />
  </target>
  <correspondences>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Append</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Append</target-path>
      <transformation-function>append("appendedstring", mock.source_dataset.source_datasetTuple.Append)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Ceiling</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Ceiling</target-path>
      <transformation-function>ceil(mock.source_dataset.source_datasetTuple.Ceiling)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Contains</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Contains</target-path>
      <transformation-function>if(contains(mock.source_dataset.source_datasetTuple.Contains, "pa"), "Yes", "No")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.ContainCount</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.ContainCount</target-path>
      <transformation-function>containCount(mock.source_dataset.source_datasetTuple.ContainCount, "pa")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_Uppercase</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_Uppercase</target-path>
      <transformation-function>toupper(mock.source_dataset.source_datasetTuple.To_Uppercase)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_Timestamp</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_Timestamp</target-path>
      <transformation-function>totimestamp(mock.source_dataset.source_datasetTuple.To_Timestamp, "hh:mm:ss")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_String</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_String</target-path>
      <transformation-function>tostring(mock.source_dataset.source_datasetTuple.To_String)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_Lowercase</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_Lowercase</target-path>
      <transformation-function>tolower(mock.source_dataset.source_datasetTuple.To_Lowercase)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_Integer</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_Integer</target-path>
      <transformation-function>toint(mock.source_dataset.source_datasetTuple.To_Integer)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_Double</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_Double</target-path>
      <transformation-function>todouble(mock.source_dataset.source_datasetTuple.To_Double)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Square_Root</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Square_Root</target-path>
      <transformation-function>sqrt(mock.source_dataset.source_datasetTuple.Square_Root)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.To_Date</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.To_Date</target-path>
      <transformation-function>todate(mock.source_dataset.source_datasetTuple.To_Date, "dd/mm/yyyy")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Substring</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Substring</target-path>
      <transformation-function>substring(mock.source_dataset.source_datasetTuple.Substring, 3)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.DateTime</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.DateTime</target-path>
      <transformation-function>datetime()</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Exponential</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Exponential</target-path>
      <transformation-function>exp(mock.source_dataset.source_datasetTuple.Exponential)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Tangent</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Tangent</target-path>
      <transformation-function>tan(mock.source_dataset.source_datasetTuple.Tangent)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Abs</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Abs</target-path>
      <transformation-function>abs(mock.source_dataset.source_datasetTuple.Abs)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Cosine</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Cosine</target-path>
      <transformation-function>cos(mock.source_dataset.source_datasetTuple.Cosine)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Floor</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Floor</target-path>
      <transformation-function>floor(mock.source_dataset.source_datasetTuple.Floor)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.IndexOf</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.IndexOf</target-path>
      <transformation-function>indexof(mock.source_dataset.source_datasetTuple.IndexOf, "pa")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.IsNotNull</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.IsNotNull</target-path>
      <transformation-function>isNotNull(mock.source_dataset.source_datasetTuple.IsNotNull)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.IsNull</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.IsNull</target-path>
      <transformation-function>isNull(mock.source_dataset.source_datasetTuple.IsNull)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.IsNumeric</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.IsNumeric</target-path>
      <transformation-function>isNumeric(mock.source_dataset.source_datasetTuple.IsNumeric)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Length</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Length</target-path>
      <transformation-function>len(mock.source_dataset.source_datasetTuple.Length)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Log</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Log</target-path>
      <transformation-function>log(mock.source_dataset.source_datasetTuple.Log)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Ln</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Ln</target-path>
      <transformation-function>ln(mock.source_dataset.source_datasetTuple.Ln)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Modulus</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Modulus</target-path>
      <transformation-function>mod(mock.source_dataset.source_datasetTuple.Modulus, 3)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Power</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Power</target-path>
      <transformation-function>pow(mock.source_dataset.source_datasetTuple.Power, 2)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Replace</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Replace</target-path>
      <transformation-function>replace(mock.source_dataset.source_datasetTuple.Replace, "pa", "la")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Round</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Round</target-path>
      <transformation-function>round(mock.source_dataset.source_datasetTuple.Round, 2)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.Sine</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.Sine</target-path>
      <transformation-function>sin(mock.source_dataset.source_datasetTuple.Sine)</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
    <correspondence>
      <source-paths>
        <source-path>mock.source_dataset.source_datasetTuple.If</source-path>
      </source-paths>
      <target-path>cde mock.target_dataset.target_datasetTuple.If</target-path>
      <transformation-function>if((isNotNull(mock.source_dataset.source_datasetTuple.If) &amp;&amp; isNull(mock.source_dataset.source_datasetTuple.If)), "Yes", "No")</transformation-function>
      <confidence>1.0</confidence>
    </correspondence>
  </correspondences>
</mappingtask>

